name: Borrow
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/borrow/{exemplar_id}'
    metadata:
      groupName: Borrow
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User borrows an exemplar'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      exemplar_id:
        name: exemplar_id
        description: 'The ID of the exemplar.'
        required: true
        example: 8
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      exemplar_id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"data":{"user_id":4,"exemplar_id":9,"borrowed":"2023-09-22T23:23:04.552027Z","returned":null,"return_due":"2023-09-22T23:24:04.552034Z","maximum_minutes":1}}'
        headers: []
        description: ''
        custom: []
      -
        status: 402
        content: '{"errors": "This borrowing is suspended because of open payments."}'
        headers: []
        description: 'Payment required.'
        custom: []
      -
        status: 403
        content: '{"errors": "This exemplar cannot leave the library."}'
        headers: []
        description: 'Exemplar cannot leave the library.'
        custom: []
      -
        status: 403
        content: '{"errors": "User has reached the maximum borrowable limit (3)."}'
        headers: []
        description: 'Maximum borrowings reached for the user.'
        custom: []
      -
        status: 403
        content: '{"errors": "This exemplar is currently borrowed."}'
        headers: []
        description: 'Exemplar is currently borrowed.'
        custom: []
      -
        status: 404
        content: '{"errors": [list]}'
        headers: []
        description: 'Exemplar not found.'
        custom: []
      -
        status: 422
        content: '{"errors": [list]}'
        headers: []
        description: 'Validation Errors.'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zhgdf3vE4Pb61kea5D6Vac8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/borrowed-list
    metadata:
      groupName: Borrow
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User lists his/hers unreturned exemplars'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":5,"borrowable":1,"book_id":61,"book_name":"Id fugit aut rem suscipit.","condition_value":2,"condition_name":"Good"},{"id":7,"borrowable":1,"book_id":93,"book_name":"Libero saepe aut facilis.","condition_value":1,"condition_name":"LikeNew"},{"id":8,"borrowable":1,"book_id":165,"book_name":"Ut ratione eos sed sunt.","condition_value":1,"condition_name":"LikeNew"}]}'
        headers: []
        description: ''
        custom: []
      -
        status: 204
        content: ''
        headers: []
        description: 'User has no unreturned exemplars.'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ZkaDg8hdP3a46Ev56Vbe1cf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/giveback/{exemplar_id}'
    metadata:
      groupName: Borrow
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User gives back an exemplar'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      exemplar_id:
        name: exemplar_id
        description: "The exemplar's ID."
        required: true
        example: 8247
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      exemplar_id: 8247
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      condition:
        name: condition
        description: 'optional The actual exemplar condition (1=LikeNew, 2=Good, 3=Worn, 4=Damaged).'
        required: false
        example: 4
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      exemplar_id: 52
      condition: 4
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"user_id":4,"exemplar_id":7,"condition":1,"returned":"2023-09-23T00:06:19.191688Z","due":"2023-09-23T00:07:00.000000Z","fee_per_rental":900,"fine_per_delay":0,"fine_per_damage":0,"total_payment_due":900,"payment_due":"2023-09-23T00:08:00.000000Z"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"errors": "Returning an exemplar in a better shape is unnaceptable!" }'
        headers: []
        description: 'User tries to return an exemplar in a better shape.'
        custom: []
      -
        status: 404
        content: '{"errors": "Exemplar #367 is not borrowed with this user #42." }'
        headers: []
        description: "User tries to return someone elses'."
        custom: []
      -
        status: 404
        content: '{"errors": [list]}'
        headers: []
        description: 'Exemplar not found.'
        custom: []
      -
        status: 422
        content: '{"errors": [list]}'
        headers: []
        description: 'Validation Errors.'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bf1P5Vae63chaDk8E6dvZ4g'
    controller: null
    method: null
    route: null
    custom: []
