## Autogenerated by Scribe. DO NOT MODIFY.

name: Category
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/categories
    metadata:
      groupName: Category
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List Categories'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start:
        name: start
        description: 'Must be at least 1.'
        required: false
        example: 55
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      start: 55
    fileParameters: []
    responses:
      -
        status: 200
        content: '{ "data": [ { "id": 4, "name": "Odit illum magnam ut et et." }, { "id": 8, "name": "Iure aut ab tempore sed." } ] }'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"errors": [list]}'
        headers: []
        description: 'Validation Errors.'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/categories/{category_id}'
    metadata:
      groupName: Category
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: 10
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      category_id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1478,"name":"Quis maxime aperiam et eius."}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"errors": [list]}'
        headers: []
        description: 'Category not found.'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/categories
    metadata:
      groupName: Category
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Category'
      description: '<small class="badge badge-purple">admin</small>'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: gqyhpnonquktzizxpljsnl
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: gqyhpnonquktzizxpljsnl
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"data":{"id":8,"name":"Iure aut ab tempore sed."}}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"errors": [list]}'
        headers: []
        description: 'Validation Errors.'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pga8hvceV166ED3bfZd4ka5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/categories/{category_id}'
    metadata:
      groupName: Category
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Category'
      description: '<small class="badge badge-purple">admin</small>'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: 8
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      category_id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: kdofbezchgkwpwvnkkxhbex
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: kdofbezchgkwpwvnkkxhbex
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1479,"name":"At expedita nisi iure ut."}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"errors": [list]}'
        headers: []
        description: 'Category not found.'
        custom: []
      -
        status: 422
        content: '{"errors": [list]}'
        headers: []
        description: 'Validation Errors.'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PD6Vvde41b6gkafhZc85Ea3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/categories/{category_id}'
    metadata:
      groupName: Category
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Category'
      description: '<small class="badge badge-purple">admin</small>'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: 15
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      category_id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"errors": [list]}'
        headers: []
        description: 'Category not found.'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 53hfEvgP8da6aZckeDb461V'
    controller: null
    method: null
    route: null
    custom: []
